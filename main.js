(()=>{"use strict";function t(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const n="https://help-desk-heroku.herokuapp.com/";return new Promise(((s,a)=>{const c=new URLSearchParams;c.append("method",t);const i=new XMLHttpRequest;switch(t){case"allTickets":i.open("GET",`${n}/?${c}`);break;case"ticketById":c.append("id",e),i.open("GET",`${n}/?${c}`);break;case"createTicket":case"statusTicket":case"changeTicket":i.open("POST",`${n}/?${c}`);break;case"deleteTicket":c.append("id",e),i.open("DELETE",`${n}/?${c}`)}i.addEventListener("load",(()=>{const t=JSON.parse(i.responseText);i.status>=200&&i.status<300?s(t):a(i.response)})),i.send(e)}))}function e(t){return`\n      <div class="item" data-id="${t.id}">\n        <div class="item__status">\n          <input type="checkbox" value="${t.status}"> \n          <span class="toggle ${t.status?"toggle--true":""}"></span>\n        </div>\n        <div class="item__content">\n          <div class="item__content__name">${t.name}</div>\n        </div>\n        <div class="item__time">${t.created}</div>\n        <button class="change">&#9998;</button>\n        <button class="delete">&#10007;</button>\n      </div>\n    `}function n(t){return`<div class="item__content__descript">${t}</div>`}function s(t,e){return`\n      <form class="modal ${t}">\n        <h2 class="modal__header">${e}</h2>\n        <label>Краткое описание\n          <input class="modal__input" name="name">\n        </label>\n        <label>Подробное описание\n          <textarea class="modal__textarea" name="description"></textarea>\n        </label>\n        <div class="modal__btns">\n          <button class="btn btn-cancel">Отмена</button>\n          <button class="btn btn-send">Ок</button>\n        </div>\n      </form>\n  `}const a=document.querySelector(".listTickets"),c=new class{constructor(t){this.listTickets=t}init(){t("allTickets").then((t=>{t.forEach((t=>{this.listTickets.insertAdjacentHTML("beforeend",e(t))}))})).catch((t=>{throw new Error(t)})),document.addEventListener("click",(t=>this.onClick(t)))}onClick(a){const{classList:c}=a.target;c.contains("btn-add-ticket")&&function(){const n=document.querySelector(".listTickets");n.insertAdjacentHTML("afterend",s("addTicketForm","Добавить тикет"));const a=document.querySelector(".addTicketForm");a.addEventListener("submit",(s=>{s.preventDefault();const c=s.target.querySelector(".modal__input");if(c.value){const c=new FormData(s.target);c.set("id",null),t("createTicket",c).then((t=>{n.insertAdjacentHTML("beforeend",e(t))})).catch((t=>{throw new Error(t)})),a.reset(),a.remove()}else c.classList.add("inputEmpty"),setTimeout((()=>c.classList.remove("inputEmpty")),2e3)}))}(),c.contains("btn-cancel")&&this.closeModal(a),c.contains("toggle")&&this.statusTicket(a),c.contains("item__content__name")&&this.getDescriptTicket(a),"change"===c.value&&function(e){document.querySelector(".listTickets").insertAdjacentHTML("afterend",s("changeTicketForm","Изменить тикет"));const a=document.querySelector(".changeTicketForm"),c=e.target.closest(".item"),i=c.dataset.id;t("ticketById",i).then((t=>{a.name.value=t.name,a.description.value=t.description})).catch((t=>{throw new Error(t)}));const o=c.querySelector(".item__content__name"),r=c.querySelector(".item__content__descript");a.addEventListener("submit",(e=>{e.preventDefault();const s=e.target.querySelector(".modal__input");if(s.value){const s=new FormData(e.target);s.set("id",i),s.set("status",c.querySelector("input").value),t("changeTicket",s).then((t=>{r?r.textContent=t.description:c.querySelector(".item__content").insertAdjacentHTML("beforeend",n(t.description)),o.textContent=t.name})).catch((t=>{throw new Error(t)})),a.reset(),a.remove()}else s.classList.add("inputEmpty"),setTimeout((()=>s.classList.remove("inputEmpty")),2e3)}))}(a),"delete"===c.value&&function(e){document.querySelector(".listTickets").insertAdjacentHTML("afterend",'\n      <form class="modal deleteTicketForm">\n        <h2 class="modal__header">Удалить тикет</h2>\n        <p class="modal__message">Вы уверены, что хотите удалить тикет? Это действие необратимо.</p>\n        <div class="modal__btns">\n          <button class="btn btn-cancel">Отмена</button>\n          <button class="btn btn-send">Ок</button>\n        </div>\n      </form>\n    '),document.querySelector(".deleteTicketForm").addEventListener("submit",(n=>{n.preventDefault(),new FormData(n.target).set("delId",e.target.closest(".item").dataset.id),t("deleteTicket",e.target.closest(".item").dataset.id),e.target.closest(".item").remove(),n.target.closest(".modal").remove()}))}(a)}closeModal(t){t.preventDefault(),t.target.closest(".modal").remove()}statusTicket(e){const n=e.target.previousElementSibling;"false"===n.value?(e.target.classList.add("toggle--true"),n.value=!0):(n.value=!1,e.target.classList.remove("toggle--true"));const s=new FormData;s.set("id",e.target.closest(".item").dataset.id),s.set("status",n.value),t("statusTicket",s)}getDescriptTicket(e){const s=e.target.closest(".item");t("ticketById",e.target.closest(".item").dataset.id).then((t=>{const e=s.querySelector(".item__content"),a=s.querySelector(".item__content__descript");!a&&t.description&&s.dataset.id==t.id&&e.insertAdjacentHTML("beforeend",n(t.description)),a&&s.dataset.id==t.id&&a.remove()})).catch((t=>{throw new Error(t)}))}}(a);c.init()})();